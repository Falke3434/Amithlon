  Reiserfs file system uses a hash function plus a generation counter
  in determining the key used in directory searching.

  We do this for compatibility with NFS,  which needs to be able to
  use a 32 (v2) or 64 bit (v3)  integer  to  specify  where  it  last
  read  from in a  directory  (the  NFS  cookie)  because it
  stupidly  assumes  that directories  are  implemented as files
  with  byte  offsets  and directories are never shrunk.  It seems
  V4 will be fixing that.  This  hash function determines the order
  of insertions. That can have dramatic impact on performance for
  large directories  because it can cause a random I/O per filename
  created.  
  
  If you want certainty of avoiding hash collisions, which will cause 
  a -EHASH_COLLISION error if you have more collisions on a 
  given hash value  than  the maximum  generation counter (256), you 
  should use the specify -h tea running mkreiserfs. The file system
  will use CRYPTO_SECURE_HASH to sort names

  The default hash, however, is Yury Rupasov's hash.
  We have never had a real user have trouble with it.
  and it is faster.  Probably someone will find an application
  someday for which it is unsuited.
 
  The  CRYPTO_SECURE_HASH gives guaranteed worst  performance  of all 
  possible hashing functions because it destroys any order that might 
  be present in the ordering of the name creation.  Almost all other 
  patterns would make the LRU algorithm somewhat effective.  
   
  The Rupasov Hash  makes  an  attempt to preserve much of  the order 
  that will be present in  alphabetically  or numerically consecutive 
  names while adding just enough randomness for it to work as a hash.
  Note that if it gets the order reversed,  the LRU algorithm 
  will still work  better than if it fully randomizes.....
  
  CRYPTO_SECURE_HASH - secure cryptographical hash function (tea hash):
  A solid, reliable, hash function.  This hash  should be used by any 
  persons  concerned  about  malicious attackers,  or who cannot risk 
  relying on the RUPASOV_HASH. This function was the first used
  in ReiserFS.
  
  RUPASOV_HASH:
  Invented by  Yuri Rupasov  while studying the problems of creating 
  directories too large to fit into RAM.  Never slower than 
  CRYPTO_SECURE_HASH, and for some applications involving directories 
  too large for RAM it can be as much as 30 times faster.  For normal 
  size  directories it makes reiserfs work with the same speed or 
  just a bit faster than tea hash function.  

  R5_HASH:
  Invented by Yuri Rupasov to solve collisions problem of rupasov_hash
  in case of names with long identical tails. R5_hash gives the same or
  better speed, so please use it to work with huge dirs.  
  
  examples :
  # mkreiserfs /dev/xxxx -h tea
  # mkreiserfs /dev/xxxx -h rupasov
  # mkreiserfs /dev/xxxx -h r5

